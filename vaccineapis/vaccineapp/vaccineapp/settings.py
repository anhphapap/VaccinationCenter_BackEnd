"""
Django settings for vaccineapp project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from celery.schedules import crontab
from django.utils import timezone
import os
import pymysql
import ssl
from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

CSRF_TRUSTED_ORIGINS = [
    "https://vaccinationcenterbackend-production.up.railway.app",
]

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-@!-cut$liq%#!a=59$9awv1j14&f!_*v8)wxr5!s8@xm!#k328'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

pymysql.install_as_MySQLdb()

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'ckeditor',
    'ckeditor_uploader',
    'vaccines.apps.VaccinesConfig',
    'rest_framework',
    'drf_yasg',
    'oauth2_provider',
    'corsheaders',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
    ),
}


CKEDITOR_UPLOAD_PATH = 'ckeditor/images/'

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
MIDDLEWARE.insert(1, 'whitenoise.middleware.WhiteNoiseMiddleware')
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
CORS_ALLOW_ALL_ORIGINS = True
AUTH_USER_MODEL = 'vaccines.User'
ROOT_URLCONF = 'vaccineapp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'vaccineapp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': config('DB_ENGINE', default='django.db.backends.mysql'),
        'NAME': config('DB_NAME'),
        'USER': config('DB_USER'),
        'PASSWORD': config('DB_PASSWORD'),
        'HOST': config('DB_HOST'),
        'PORT': config('DB_PORT', default='3306'),
        'OPTIONS': {
            'ssl': {'ssl-ca': ''}  # bắt Railway accept SSL (dùng ssl-ca trống)
        }
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# CLIENT_ID = 'm8H0JMoxBgJTUFHvW6f2a29kf23udVTHoT5Ig1pg'
# CLIENT_SECRET = '977cvBKgFvVg44A6s26bA5E4mvGUfMrQSUyQRrzzoAl3Uh2ADYpN1GcsDeObHdlNGCYnbCyytN3Z5EMArz6fxEnDbTJ58sEAXZMwG4MW6qJof4rENph8oKvqA68KJToP'
TIME_ZONE = 'Asia/Ho_Chi_Minh'
USE_TZ = True
# settings.py
CELERY_BEAT_SCHEDULE = {
    # 'warm-up-redis': {
    #     'task': 'vaccines.tasks.warm_up_redis',
    #     'schedule': crontab(hour=(4, 14), minute=(55, 20)),
    # },
    'send-injection-reminder': {
        'task': 'vaccines.tasks.send_injection_reminder',
        'schedule': crontab(hour=16, minute=15),
    },
    'update-campaign-status': {
        'task': 'vaccines.tasks.update_campaign_status',
        'schedule': crontab(hour=0, minute=1),
    },
    'update_missed_injections': {
        'task': 'vaccines.tasks.update_missed_injections',
        'schedule': crontab(hour=16, minute=15),
    },
}
CELERY_BROKER_URL = os.environ.get('CELERY_BROKER_URL')
REDIS_URL = CELERY_BROKER_URL
CELERY_BROKER_USE_SSL = {
    'ssl_cert_reqs': ssl.CERT_NONE,
    'ssl_check_hostname': False,
}


# get from config
VNPAY_RETURN_URL = os.environ.get('VNPAY_RETURN_URL')
VNPAY_PAYMENT_URL = 'https://sandbox.vnpayment.vn/paymentv2/vpcpay.html'  # get from config
VNPAY_API_URL = 'https://sandbox.vnpayment.vn/merchant_webapi/api/transaction'
# Website ID in VNPAY System, get from config
VNPAY_TMN_CODE = os.environ.get('VNPAY_TMN_CODE')
# Secret key for create checksum,get from config
VNPAY_HASH_SECRET_KEY = os.environ.get('VNPAY_HASH_SECRET_KEY')

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.sendgrid.net'
EMAIL_HOST_USER = 'apikey'
EMAIL_HOST_PASSWORD = os.environ.get('SENDGRID_API_KEY')
EMAIL_PORT = 587
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = 'pvcenter24@gmail.com'
SERVER_EMAIL = 'pvcenter24@gmail.com'


FRONTEND_URL = 'http://localhost:3000'
